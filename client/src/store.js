/* eslint-disable */
import { createStore, applyMiddleware, compose } from 'redux';
import { syncHistoryWithStore } from 'react-router-redux';
import { browserHistory } from 'react-router';
import thunk from 'redux-thunk';
// import the root reducer

import rootReducer from './reducers/index';

/**
 * [appState description]
 * appState will hold all the states accossiated and used by the App component
 * @type {object}
 * @ {[ARRAY]} timelineData Stores all the information a User will make with a timeline
 * @property {string]} timelineName User input of a timelineName they want
 * @property {[number]} startDate Start of a User timeline
 * @property {[number]} endDate Last day of a User timeline
 * @property {[number]} numberOfDays The length of the timeline
 * @property {[string]} timelineId Unique id generated by shortId tied to a timeline
 * @property {[number]} createEventDay User input to place an event on a specific day
 * @property {[string]} newEvent User input to create a new event on a specified day
 * @property {[number]} newEventAddress The event may also have an address to search for later
 */
const appState = {
  timelineData: [],
  timelineName: 'testTimeline', // temp until we get some more data built up
  startDate: '',
  endDate: '',
  numberOfDays: 0,
  timelineId: 'S1nnbsNlG', // temp until we get a way to produce these
  createEventDay: '',
  newEvent: '',
  newEventAddress: '',
};

const searchState = {
  locationSearch: '',
  termBar: '',
  searchList: [],
  selectedDay: '',
};

const state = {
  appState,
  searchState,
};

const enhancers = compose(window.devToolsExtension ? window.devToolsExtension() : f => f);
const store = createStore(rootReducer, state, applyMiddleware(thunk));

//const store = createStore(rootReducer, state, enhancers);
if (module.hot) {
  module.hot.accept('./reducers/', () => {
    const nextRootReducer = require('./reducers/index').default;
    store.replaceReducer(nextRootReducer);
  });
}



export default store;
